name: router-switch-web-lab

topology:
    nodes:
        router:
            kind: linux
            image: frrouting/frr:latest
            binds:
              - ./config/routers/:/config
            exec: 
              - sh /config/init.sh

        switch:
            kind: linux
            image: frrouting/frr:latest
            binds:
              - ./config/switches:/etc/frr
            # cmd: sh /etc/frr/config.switch2.sh

        web1:
            kind: linux
            image: alpine:latest
            binds:
              - ./config/servers/:/etc/nginx/
              - ./config/servers/:/config/

            # Installs nginx and runs it in the foreground to keep the container alive
            exec:
              - sh /config/config.web1.sh # sh -c "apk add nginx && sh /config/config.web.sh"

        web2:
            kind: linux
            image: alpine:latest
            binds:
              - ./config/servers/:/etc/nginx/ # ./config/servers/nginx/
              - ./config/servers/:/config/

            # Installs nginx and runs it in the foreground to keep the container alive
            exec:
              - sh /config/config.web2.sh

        loadbalancer:
            kind: linux
            image: alpine:latest
            binds:
              - ./config/servers/haproxy.cfg:/etc/haproxy/haproxy.cfg # ./config/servers/loadbalancer
              - ./config/servers/start-haproxy.sh:/start-haproxy.sh
            exec:
              - sh /start-haproxy.sh
            ports:
              - 8080:80 # Expose port 80 of the load balancer to port 8080 on the host

    links:
      - endpoints: ["router:eth1", "switch:eth1"]
      - endpoints: ["switch:eth2", "web1:eth1"]
      - endpoints: ["switch:eth3", "web2:eth1"]
      - endpoints: ["switch:eth4", "loadbalancer:eth1"]
